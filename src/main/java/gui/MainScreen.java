package gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import logic.MyLogic;
import org.json.JSONArray;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by Tim on 15.06.2015.
 */
public class MainScreen extends JFrame {
    private JPanel rootPanel;
    private JLabel lblHeader;
    private JTextField tfPath;
    private JLabel lblMaxQuestLength;
    private JLabel lblMaxAnswLength;
    private JTextField tfMaxQuestLength;
    private JTextField tfMaxAnswLength;
    private JButton btnStart;
    private JCheckBox cbLogFile;

    private MyLogic logic = MyLogic.getInstance();

    public MainScreen() {
        setContentPane(rootPanel);
        setTitle("JSON-Length-Testing-Tool");
        rootPanel.setBorder(new EmptyBorder(10, 10, 10, 10));
        setVisible(true);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        pack();


        btnStart.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {

                Boolean valuesEntered = true;

                while (valuesEntered) {
                    if (tfPath.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Path missing!");
                        valuesEntered = false;
                    } else if (tfMaxQuestLength.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Maximum question length missing!");
                        valuesEntered = false;
                    } else if (tfMaxAnswLength.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Maximum answer length missing!");
                        valuesEntered = false;
                    } else {
                        String filePath = tfPath.getText();
                        int maxQuestLength = Integer.parseInt(tfMaxQuestLength.getText());
                        int maxAnswLength = Integer.parseInt(tfMaxAnswLength.getText());
                        boolean log = cbLogFile.isSelected();

                        JSONArray jsonArray = logic.getJSONArrayFromFilePath(filePath);
                        logic.checkJSONArrayForMaxLength(jsonArray, maxQuestLength, maxAnswLength, log);
                        break;
                    }
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        lblHeader = new JLabel();
        lblHeader.setText("Enter the path to the JSON file below:");
        rootPanel.add(lblHeader, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tfPath = new JTextField();
        rootPanel.add(tfPath, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        lblMaxQuestLength = new JLabel();
        lblMaxQuestLength.setText("Maximum question length:");
        rootPanel.add(lblMaxQuestLength, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblMaxAnswLength = new JLabel();
        lblMaxAnswLength.setText("Maximum answer length:");
        rootPanel.add(lblMaxAnswLength, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tfMaxQuestLength = new JTextField();
        tfMaxQuestLength.setText("");
        rootPanel.add(tfMaxQuestLength, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        tfMaxAnswLength = new JTextField();
        tfMaxAnswLength.setText("");
        rootPanel.add(tfMaxAnswLength, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        btnStart = new JButton();
        btnStart.setText("Start Test");
        rootPanel.add(btnStart, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cbLogFile = new JCheckBox();
        cbLogFile.setText("Create log file?");
        rootPanel.add(cbLogFile, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
